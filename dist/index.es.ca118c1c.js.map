{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-6c0eef8c1349fd1a.js","node_modules/pouchdb-adapter-indexeddb/lib/index.es.js","node_modules/pouchdb-adapter-utils/lib/index.es.js","node_modules/pouchdb-merge/lib/index.es.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"ec56c8aeca118c1c\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { btoa, readAsBinaryString, binaryStringToBlobOrBuffer } from 'pouchdb-binary-utils';\nimport { parseDoc } from 'pouchdb-adapter-utils';\nimport { binaryMd5 } from 'pouchdb-md5';\nimport { uuid, filterChange, changesHandler } from 'pouchdb-utils';\nimport { createError, IDB_ERROR, MISSING_DOC, REV_CONFLICT, MISSING_STUB, BAD_ARG } from 'pouchdb-errors';\nimport { latest, winningRev, merge, collectConflicts, traverseRevTree } from 'pouchdb-merge';\n\nvar IDB_NULL = Number.MIN_SAFE_INTEGER;\nvar IDB_FALSE = Number.MIN_SAFE_INTEGER + 1;\nvar IDB_TRUE = Number.MIN_SAFE_INTEGER + 2;\n\n//\n// IndexedDB only allows valid JS names in its index paths, whereas JSON allows\n// for any string at all. This converts invalid JS names to valid ones, to allow\n// for them to be indexed.\n//\n// For example, \"foo-bar\" is a valid JSON key, but cannot be a valid JS name\n// (because that would be read as foo minus bar).\n//\n// Very high level rules for valid JS names are:\n//  - First character cannot start with a number\n//  - Otherwise all characters must be be a-z, A-Z, 0-9, $ or _.\n//  - We allow . unless the name represents a single field, as that represents\n//    a deep index path.\n//\n// This is more aggressive than it needs to be, but also simpler.\n//\nvar KEY_INVALID = /[^a-zA-Z0-9_$]+|(^[^a-zA-Z_$])/g;\nvar PATH_INVALID = /(\\\\.)|[^a-zA-Z0-9_$.]+|(^[^a-zA-Z_$])/g;\nvar SLASH = '\\\\'.charCodeAt(0);\n\n// These are the same as above but without the global flag\n// we want to use RegExp.test because it's really fast, but the global flag\n// makes the regex const stateful (seriously) as it walked through all instances\nvar TEST_KEY_INVALID = /[^a-zA-Z0-9_$]+|(^[^a-zA-Z_$])/;\nvar TEST_PATH_INVALID = /(\\\\.)|[^a-zA-Z0-9_$.]+|(^[^a-zA-Z_$])/;\nfunction needsSanitise(name, isPath) {\n  if (isPath) {\n    return TEST_PATH_INVALID.test(name);\n  } else {\n    return TEST_KEY_INVALID.test(name);\n  }\n}\n\nfunction sanitise(name, isPath) {\n  var correctCharacters = function (match) {\n    var good = '';\n    for (var i = 0; i < match.length; i++) {\n      var code = match.charCodeAt(i);\n      // If you're sanitising a path, a slash character is there to be interpreted\n      // by whatever parses the path later as \"escape the next thing\".\n      //\n      // e.g., if you want to index THIS string:\n      //   {\"foo\": {\"bar.baz\": \"THIS\"}}\n      // Your index path would be \"foo.bar\\.baz\".\n      if (code === SLASH && isPath) {\n        continue;\n      }\n\n      good += '_c' + code + '_';\n    }\n    return good;\n  };\n\n  if (isPath) {\n    return name.replace(PATH_INVALID, correctCharacters);\n  } else {\n    return name.replace(KEY_INVALID, correctCharacters);\n  }\n}\n\nfunction needsRewrite(data) {\n  for (var key of Object.keys(data)) {\n    if (needsSanitise(key)) {\n      return true;\n    } else if (data[key] === null || typeof data[key] === 'boolean') {\n      return true;\n    } else if (typeof data[key] === 'object') {\n      return needsRewrite(data[key]);\n    }\n  }\n}\n\nfunction rewrite(data) {\n  if (!needsRewrite(data)) {\n    return false;\n  }\n\n  var isArray = Array.isArray(data);\n  var clone = isArray\n    ? []\n    : {};\n\n  Object.keys(data).forEach(function (key) {\n    var safeKey = isArray ? key : sanitise(key);\n\n    if (data[key] === null) {\n      clone[safeKey] = IDB_NULL;\n    } else if (typeof data[key] === 'boolean') {\n      clone[safeKey] = data[key] ? IDB_TRUE : IDB_FALSE;\n    } else if (typeof data[key] === 'object') {\n      clone[safeKey] = rewrite(data[key]);\n    } else {\n      clone[safeKey] = data[key];\n    }\n  });\n\n  return clone;\n}\n\nvar DOC_STORE = 'docs';\nvar META_STORE = 'meta';\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\nfunction processAttachment(name, src, doc, isBinary) {\n\n  delete doc._attachments[name].stub;\n\n  if (isBinary) {\n    doc._attachments[name].data =\n      src.attachments[doc._attachments[name].digest].data;\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve) {\n    var data = src.attachments[doc._attachments[name].digest].data;\n    readAsBinaryString(data, function (binString) {\n      doc._attachments[name].data = btoa(binString);\n      delete doc._attachments[name].length;\n      resolve();\n    });\n  });\n}\n\nfunction rawIndexFields(ddoc, viewName) {\n  // fields are an array of either the string name of the field, or a key value\n  var fields = ddoc.views[viewName].options &&\n               ddoc.views[viewName].options.def &&\n               ddoc.views[viewName].options.def.fields || [];\n\n  // Either ['foo'] or [{'foo': 'desc'}]\n  return fields.map(function (field) {\n    if (typeof field === 'string') {\n      return field;\n    } else {\n      return Object.keys(field)[0];\n    }\n  });\n}\n\nfunction naturalIndexName(fields) {\n  return '_find_idx/' + fields.join('/');\n}\n\n/**\n * Convert the fields the user gave us in the view and convert them to work for\n * indexeddb.\n *\n * fields is an array of field strings. A field string could be one field:\n *   'foo'\n * Or it could be a json path:\n *   'foo.bar'\n */\nfunction correctIndexFields(fields) {\n  // Every index has to have deleted at the front, because when we do a query\n  // we need to filter out deleted documents.\n  return ['deleted'].concat(\n    fields.map(function (field) {\n      if (field in ['_id', '_rev', '_deleted', '_attachments']) {\n        // These properties are stored at the top level without the underscore\n        return field.substr(1);\n      } else {\n        // The custom document fields are inside the `data` property\n        return 'data.' + sanitise(field, true);\n      }\n    })\n  );\n}\n\n//\n// Core PouchDB schema version. Increment this if we, as a library, want to make\n// schema changes in indexeddb. See upgradePouchDbSchema()\n//\nvar POUCHDB_IDB_VERSION = 1;\n\n//\n// Functions that manage a combinate indexeddb version, by combining the current\n// time in millis that represents user migrations with a large multiplier that\n// represents PouchDB system migrations.\n//\n// This lets us use the idb version number to both represent\n// PouchDB-library-level migrations as well as \"user migrations\" required for\n// when design documents trigger the addition or removal of native indexes.\n//\n// Given that Number.MAX_SAFE_INTEGER = 9007199254740991\n//\n// We can easily use the largest 2-3 digits and either allow:\n//  - 900 system migrations up to 2198/02/18\n//  - or 89 system migrations up to 5050/02/14\n//\n// This impl does the former. If this code still exists after 2198 someone send my\n// decendents a Spacebook message congratulating them on their impressive genes.\n//\n// 9007199254740991 <- MAX_SAFE_INTEGER\n//   10000000000000 <- 10^13\n//    7199254740991 <- 2198-02-18T16:59:00.991Z\n//\nvar versionMultiplier = Math.pow(10, 13);\nfunction createIdbVersion() {\n  return (versionMultiplier * POUCHDB_IDB_VERSION) + new Date().getTime();\n}\nfunction getPouchDbVersion(version) {\n  return Math.floor(version / versionMultiplier);\n}\n\nfunction maintainNativeIndexes(openReq, reject) {\n  var docStore = openReq.transaction.objectStore(DOC_STORE);\n  var ddocsReq = docStore.getAll(IDBKeyRange.bound('_design/', '_design/\\uffff'));\n\n  ddocsReq.onsuccess = function (e) {\n    var results = e.target.result;\n    var existingIndexNames = Array.from(docStore.indexNames);\n\n    // NB: the only thing we're supporting here is the declared indexing\n    // fields nothing more.\n    var expectedIndexes = results.filter(function (row) {\n      return row.deleted === 0 && row.revs[row.rev].data.views;\n    }).map(function (row) {\n      return row.revs[row.rev].data;\n    }).reduce(function (indexes, ddoc) {\n      return Object.keys(ddoc.views).reduce(function (acc, viewName) {\n        var fields = rawIndexFields(ddoc, viewName);\n\n        if (fields && fields.length > 0) {\n          acc[naturalIndexName(fields)] = correctIndexFields(fields);\n        }\n\n        return acc;\n      }, indexes);\n    }, {});\n\n    var expectedIndexNames = Object.keys(expectedIndexes);\n\n    // Delete any indexes that aren't system indexes or expected\n    var systemIndexNames = ['seq'];\n    existingIndexNames.forEach(function (index) {\n      if (systemIndexNames.indexOf(index) === -1  && expectedIndexNames.indexOf(index) === -1) {\n        docStore.deleteIndex(index);\n      }\n    });\n\n    // Work out which indexes are missing and create them\n    var newIndexNames = expectedIndexNames.filter(function (ei) {\n      return existingIndexNames.indexOf(ei) === -1;\n    });\n\n    try {\n      newIndexNames.forEach(function (indexName) {\n        docStore.createIndex(indexName, expectedIndexes[indexName]);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  };\n}\n\nfunction upgradePouchDbSchema(db, pouchdbVersion) {\n  if (pouchdbVersion < 1) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    docStore.createIndex('seq', 'seq', {unique: true});\n\n    db.createObjectStore(META_STORE, {keyPath: 'id'});\n  }\n\n  // Declare more PouchDB schema changes here\n  // if (pouchdbVersion < 2) { .. }\n}\n\nfunction openDatabase(openDatabases, api, opts, resolve, reject) {\n  var openReq = opts.versionchanged ?\n    indexedDB.open(opts.name) :\n    indexedDB.open(opts.name, createIdbVersion());\n\n  openReq.onupgradeneeded = function (e) {\n    if (e.oldVersion > 0 && e.oldVersion < versionMultiplier) {\n      // This DB was created with the \"idb\" adapter, **not** this one.\n      // For now we're going to just error out here: users must manually\n      // migrate between the two. In the future, dependent on performance tests,\n      // we might silently migrate\n      throw new Error('Incorrect adapter: you should specify the \"idb\" adapter to open this DB');\n    }\n\n    var db = e.target.result;\n\n    var pouchdbVersion = getPouchDbVersion(e.oldVersion);\n    upgradePouchDbSchema(db, pouchdbVersion);\n    maintainNativeIndexes(openReq, reject);\n  };\n\n  openReq.onblocked = function (e) {\n      // AFAICT this only occurs if, after sending `onversionchange` events to\n      // all other open DBs (ie in different tabs), there are still open\n      // connections to the DB. In this code we should never see this because we\n      // close our DBs on these events, and all DB interactions are wrapped in\n      // safely re-opening the DB.\n      console.error('onblocked, this should never happen', e);\n  };\n\n  openReq.onsuccess = function (e) {\n    var idb = e.target.result;\n\n    idb.onabort = function (e) {\n      console.error('Database has a global failure', e.target.error);\n      delete openDatabases[opts.name];\n      idb.close();\n    };\n\n    idb.onversionchange = function () {\n      console.log('Database was made stale, closing handle');\n      openDatabases[opts.name].versionchanged = true;\n      idb.close();\n    };\n\n    var metadata = {id: META_STORE};\n    var txn = idb.transaction([META_STORE], 'readwrite');\n\n    txn.oncomplete = function () {\n      resolve({idb: idb, metadata: metadata});\n    };\n\n    var metaStore = txn.objectStore(META_STORE);\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metadata = e.target.result || metadata;\n      var changed = false;\n\n      if (!('doc_count' in metadata)) {\n        changed = true;\n        metadata.doc_count = 0;\n      }\n\n      if (!('seq' in metadata)) {\n        changed = true;\n        metadata.seq = 0;\n      }\n\n      if (!('db_uuid' in metadata)) {\n        changed = true;\n        metadata.db_uuid = uuid();\n      }\n\n      if (changed) {\n        metaStore.put(metadata);\n      }\n    };\n  };\n\n  openReq.onerror = function (e) {\n    reject(e.target.error);\n  };\n}\n\nfunction setup (openDatabases, api, opts) {\n  if (!openDatabases[opts.name] || openDatabases[opts.name].versionchanged) {\n    opts.versionchanged = openDatabases[opts.name] &&\n                          openDatabases[opts.name].versionchanged;\n\n    openDatabases[opts.name] = new Promise(function (resolve, reject) {\n      openDatabase(openDatabases, api, opts, resolve, reject);\n    });\n  }\n\n  return openDatabases[opts.name];\n}\n\nfunction info (metadata, callback) {\n  callback(null, {\n    doc_count: metadata.doc_count,\n    update_seq: metadata.seq\n  });\n}\n\nfunction get (txn, id, opts, callback) {\n  if (txn.error) {\n    return callback(txn.error);\n  }\n\n  txn.txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n    var doc = e.target.result;\n    var rev;\n    if (!opts.rev) {\n      rev = (doc && doc.rev);\n    } else {\n      rev = opts.latest ? latest(opts.rev, doc) : opts.rev;\n    }\n\n    if (!doc || (doc.deleted && !opts.rev) || !(rev in doc.revs)) {\n      callback(createError(MISSING_DOC, 'missing'));\n      return;\n    }\n\n    var result = doc.revs[rev].data;\n    result._id = doc.id;\n    result._rev = rev;\n\n    // WARNING: expecting possible old format\n    // TODO: why are we passing the transaction in the context?\n    //       It's not clear we ever thread these txns usefully\n    callback(null, {\n      doc: result,\n      metadata: doc,\n      ctx: txn\n    });\n  };\n}\n\nfunction parseAttachment(attachment, opts, cb) {\n  if (opts.binary) {\n    return cb(null, attachment);\n  } else {\n    readAsBinaryString(attachment, function (binString) {\n      cb(null, btoa(binString));\n    });\n  }\n}\n\nfunction getAttachment(txn, docId, attachId, _, opts, cb) {\n  if (txn.error) {\n    return cb(txn.error);\n  }\n\n  var attachment;\n\n  txn.txn.objectStore(DOC_STORE).get(docId).onsuccess = function (e) {\n    var doc = e.target.result;\n    var rev = doc.revs[opts.rev || doc.rev].data;\n    var digest = rev._attachments[attachId].digest;\n    attachment = doc.attachments[digest].data;\n  };\n\n  txn.txn.oncomplete = function () {\n    parseAttachment(attachment, opts, cb);\n  };\n\n  txn.txn.onabort = cb;\n}\n\nfunction bulkDocs (api, req, opts, metadata, dbOpts, idbChanges, callback) {\n\n  var txn;\n\n  // TODO: I would prefer to get rid of these globals\n  var error;\n  var results = [];\n  var docs = [];\n  var lastWriteIndex;\n\n  var revsLimit = dbOpts.revs_limit || 1000;\n  var rewriteEnabled = dbOpts.name.indexOf(\"-mrview-\") === -1;\n\n  // We only need to track 1 revision for local documents\n  function docsRevsLimit(doc) {\n    return /^_local/.test(doc.id) ? 1 : revsLimit;\n  }\n\n  function rootIsMissing(doc) {\n    return doc.rev_tree[0].ids[1].status === 'missing';\n  }\n\n  function parseBase64(data) {\n    try {\n      return atob(data);\n    } catch (e) {\n      return {\n        error: createError(BAD_ARG, 'Attachment is not a valid base64 string')\n      };\n    }\n  }\n\n  // Reads the original doc from the store if available\n  // As in allDocs with keys option using multiple get calls is the fastest way\n  function fetchExistingDocs(txn, docs) {\n    var fetched = 0;\n    var oldDocs = {};\n\n    function readDone(e) {\n      if (e.target.result) {\n        oldDocs[e.target.result.id] = e.target.result;\n      }\n      if (++fetched === docs.length) {\n        processDocs(txn, docs, oldDocs);\n      }\n    }\n\n    docs.forEach(function (doc) {\n      txn.objectStore(DOC_STORE).get(doc.id).onsuccess = readDone;\n    });\n  }\n\n  function processDocs(txn, docs, oldDocs) {\n\n    docs.forEach(function (doc, i) {\n      var newDoc;\n\n      // The first document write cannot be a deletion\n      if ('was_delete' in opts && !(oldDocs.hasOwnProperty(doc.id))) {\n        newDoc = createError(MISSING_DOC, 'deleted');\n\n      // The first write of a document cannot specify a revision\n      } else if (opts.new_edits &&\n                 !oldDocs.hasOwnProperty(doc.id) &&\n                 rootIsMissing(doc)) {\n        newDoc = createError(REV_CONFLICT);\n\n      // Update the existing document\n      } else if (oldDocs.hasOwnProperty(doc.id)) {\n        newDoc = update(txn, doc, oldDocs[doc.id]);\n        // The update can be rejected if it is an update to an existing\n        // revision, if so skip it\n        if (newDoc == false) {\n          return;\n        }\n\n      // New document\n      } else {\n        // Ensure new documents are also stemmed\n        var merged = merge([], doc.rev_tree[0], docsRevsLimit(doc));\n        doc.rev_tree = merged.tree;\n        doc.stemmedRevs = merged.stemmedRevs;\n        newDoc = doc;\n        newDoc.isNewDoc = true;\n        newDoc.wasDeleted = doc.revs[doc.rev].deleted ? 1 : 0;\n      }\n\n      if (newDoc.error) {\n        results[i] = newDoc;\n      } else {\n        oldDocs[newDoc.id] = newDoc;\n        lastWriteIndex = i;\n        write(txn, newDoc, i);\n      }\n    });\n  }\n\n  // Converts from the format returned by parseDoc into the new format\n  // we use to store\n  function convertDocFormat(doc) {\n\n    var newDoc = {\n      id: doc.metadata.id,\n      rev: doc.metadata.rev,\n      rev_tree: doc.metadata.rev_tree,\n      revs: doc.metadata.revs || {}\n    };\n\n    newDoc.revs[newDoc.rev] = {\n      data: doc.data,\n      deleted: doc.metadata.deleted\n    };\n\n    return newDoc;\n  }\n\n  function update(txn, doc, oldDoc) {\n\n    // Ignore updates to existing revisions\n    if ((doc.rev in oldDoc.revs) && !opts.new_edits) {\n      return false;\n    }\n\n    var isRoot = /^1-/.test(doc.rev);\n\n    // Reattach first writes after a deletion to last deleted tree\n    if (oldDoc.deleted && !doc.deleted && opts.new_edits && isRoot) {\n      var tmp = doc.revs[doc.rev].data;\n      tmp._rev = oldDoc.rev;\n      tmp._id = oldDoc.id;\n      doc = convertDocFormat(parseDoc(tmp, opts.new_edits, dbOpts));\n    }\n\n    var merged = merge(oldDoc.rev_tree, doc.rev_tree[0], docsRevsLimit(doc));\n    doc.stemmedRevs = merged.stemmedRevs;\n    doc.rev_tree = merged.tree;\n\n    // Merge the old and new rev data\n    var revs = oldDoc.revs;\n    revs[doc.rev] = doc.revs[doc.rev];\n    doc.revs = revs;\n\n    doc.attachments = oldDoc.attachments;\n\n    var inConflict = opts.new_edits && (((oldDoc.deleted && doc.deleted) ||\n       (!oldDoc.deleted && merged.conflicts !== 'new_leaf') ||\n       (oldDoc.deleted && !doc.deleted && merged.conflicts === 'new_branch') ||\n       (oldDoc.rev === doc.rev)));\n\n    if (inConflict) {\n      return createError(REV_CONFLICT);\n    }\n\n    doc.wasDeleted = oldDoc.deleted;\n\n    return doc;\n  }\n\n  function write(txn, doc, i) {\n\n    // We copy the data from the winning revision into the root\n    // of the document so that it can be indexed\n    var winningRev$$1 = winningRev(doc);\n    // rev of new doc for attachments and to return it\n    var writtenRev = doc.rev;\n    var isLocal = /^_local/.test(doc.id);\n\n    var theDoc = doc.revs[winningRev$$1].data;\n\n    if (rewriteEnabled) {\n      // doc.data is what we index, so we need to clone and rewrite it, and clean\n      // it up for indexability\n      var result = rewrite(theDoc);\n      if (result) {\n        doc.data = result;\n        delete doc.data._attachments;\n      } else {\n        doc.data = theDoc;\n      }\n    } else {\n      doc.data = theDoc;\n    }\n\n    doc.rev = winningRev$$1;\n    // .deleted needs to be an int for indexing\n    doc.deleted = doc.revs[winningRev$$1].deleted ? 1 : 0;\n\n    // Bump the seq for every new (non local) revision written\n    // TODO: index expects a unique seq, not sure if ignoring local will\n    // work\n    if (!isLocal) {\n      doc.seq = ++metadata.seq;\n\n      var delta = 0;\n      // If its a new document, we wont decrement if deleted\n      if (doc.isNewDoc) {\n        delta = doc.deleted ? 0 : 1;\n      } else if (doc.wasDeleted !== doc.deleted) {\n        delta = doc.deleted ? -1 : 1;\n      }\n      metadata.doc_count += delta;\n    }\n    delete doc.isNewDoc;\n    delete doc.wasDeleted;\n\n    // If there have been revisions stemmed when merging trees,\n    // delete their data\n    if (doc.stemmedRevs) {\n      doc.stemmedRevs.forEach(function (rev) { delete doc.revs[rev]; });\n    }\n    delete doc.stemmedRevs;\n\n    if (!('attachments' in doc)) {\n      doc.attachments = {};\n    }\n\n    if (theDoc._attachments) {\n      for (var k in theDoc._attachments) {\n        var attachment = theDoc._attachments[k];\n        if (attachment.stub) {\n          if (!(attachment.digest in doc.attachments)) {\n            error = createError(MISSING_STUB);\n            // TODO: Not sure how safe this manual abort is, seeing\n            // console issues\n            txn.abort();\n            return;\n          }\n\n          doc.attachments[attachment.digest].revs[writtenRev] = true;\n\n        } else {\n\n          doc.attachments[attachment.digest] = attachment;\n          doc.attachments[attachment.digest].revs = {};\n          doc.attachments[attachment.digest].revs[writtenRev] = true;\n\n          theDoc._attachments[k] = {\n            stub: true,\n            digest: attachment.digest,\n            content_type: attachment.content_type,\n            length: attachment.length,\n            revpos: parseInt(writtenRev, 10)\n          };\n        }\n      }\n    }\n\n    // Local documents have different revision handling\n    if (isLocal && doc.deleted) {\n      txn.objectStore(DOC_STORE).delete(doc.id).onsuccess = function () {\n        results[i] = {\n          ok: true,\n          id: doc.id,\n          rev: '0-0'\n        };\n      };\n      updateSeq(i);\n      return;\n    }\n\n    txn.objectStore(DOC_STORE).put(doc).onsuccess = function () {\n      results[i] = {\n        ok: true,\n        id: doc.id,\n        rev: writtenRev\n      };\n      updateSeq(i);\n    };\n  }\n\n  function updateSeq(i) {\n    if (i === lastWriteIndex) {\n      txn.objectStore(META_STORE).put(metadata);\n    }\n  }\n\n  function preProcessAttachment(attachment) {\n    if (attachment.stub) {\n      return Promise.resolve(attachment);\n    }\n\n    var binData;\n    if (typeof attachment.data === 'string') {\n      binData = parseBase64(attachment.data);\n      if (binData.error) {\n        return Promise.reject(binData.error);\n      }\n      attachment.data = binaryStringToBlobOrBuffer(binData, attachment.content_type);\n    } else {\n      binData = attachment.data;\n    }\n\n    return new Promise(function (resolve) {\n      binaryMd5(binData, function (result) {\n        attachment.digest = 'md5-' + result;\n        attachment.length = binData.size || binData.length || 0;\n        resolve(attachment);\n      });\n    });\n  }\n\n  function preProcessAttachments() {\n    var promises = docs.map(function (doc) {\n      var data = doc.revs[doc.rev].data;\n      if (!data._attachments) {\n        return Promise.resolve(data);\n      }\n      var attachments = Object.keys(data._attachments).map(function (k) {\n        data._attachments[k].name = k;\n        return preProcessAttachment(data._attachments[k]);\n      });\n\n      return Promise.all(attachments).then(function (newAttachments) {\n        var processed = {};\n        newAttachments.forEach(function (attachment) {\n          processed[attachment.name] = attachment;\n          delete attachment.name;\n        });\n        data._attachments = processed;\n        return data;\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  for (var i = 0, len = req.docs.length; i < len; i++) {\n    var result;\n    // TODO: We should get rid of throwing for invalid docs, also not sure\n    // why this is needed in idb-next and not idb\n    try {\n      result = parseDoc(req.docs[i], opts.new_edits, dbOpts);\n    } catch (err) {\n      result = err;\n    }\n    if (result.error) {\n      return callback(result);\n    }\n\n    // Ideally parseDoc would return data in this format, but it is currently\n    // shared so we need to convert\n    docs.push(convertDocFormat(result));\n  }\n\n  preProcessAttachments().then(function () {\n    api._openTransactionSafely([DOC_STORE, META_STORE], 'readwrite', function (err, _txn) {\n      if (err) {\n        return callback(err);\n      }\n\n      txn = _txn;\n\n      txn.onabort = function () {\n        callback(error);\n      };\n      txn.ontimeout = idbError(callback);\n\n      txn.oncomplete = function () {\n        idbChanges.notify(dbOpts.name);\n        callback(null, results);\n      };\n\n      // We would like to use promises here, but idb sucks\n      fetchExistingDocs(txn, docs);\n    });\n  }).catch(function (err) {\n    callback(err);\n  });\n}\n\nfunction allDocsKeys(keys, docStore, allDocsInner) {\n  // It's not guaranted to be returned in right order\n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n      valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        valuesBatch.forEach(function (doc) {\n            allDocsInner(doc);\n        });\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction handleKeyRangeError(opts, metadata, err, callback) {\n  if (err.name === \"DataError\" && err.code === 0) {\n    // data error, start is less than end\n    var returnVal = {\n      total_rows: metadata.doc_count,\n      offset: opts.skip,\n      rows: []\n    };\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      returnVal.update_seq = metadata.seq;\n    }\n    return callback(null, returnVal);\n  }\n  callback(createError(IDB_ERROR, err.name, err.message));\n}\n\nfunction allDocs (txn, metadata, opts, callback) {\n  if (txn.error) {\n    return callback(txn.error);\n  }\n\n  // TODO: Weird hack, I dont like it\n  if (opts.limit === 0) {\n    var returnVal = {\n      total_rows: metadata.doc_count,\n      offset: opts.skip,\n      rows: []\n    };\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      returnVal.update_seq = metadata.seq;\n    }\n    return callback(null, returnVal);\n  }\n\n  var results = [];\n  var processing = [];\n\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n  var descending = 'descending' in opts && opts.descending ? 'prev' : null;\n\n  var keyRange;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, descending);\n    if (keyRange && keyRange.error) {\n      return handleKeyRangeError(opts, metadata, keyRange.error, callback);\n    }\n  }\n\n  var docStore = txn.txn.objectStore(DOC_STORE);\n\n  txn.txn.oncomplete = onTxnComplete;\n\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, allDocsInner);\n  }\n\n  function include_doc(row, doc) {\n    var docData = doc.revs[doc.rev].data;\n\n    row.doc = docData;\n    row.doc._id = doc.id;\n    row.doc._rev = doc.rev;\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(doc);\n      if (conflicts.length) {\n        row.doc._conflicts = conflicts;\n      }\n    }\n    if (opts.attachments && docData._attachments) {\n      for (var name in docData._attachments) {\n        processing.push(processAttachment(name, doc, row.doc, opts.binary));\n      }\n    }\n  }\n\n  function allDocsInner(doc) {\n    if (doc.error && keys) {\n      // key was not found with \"keys\" requests\n      results.push(doc);\n      return true;\n    }\n\n    var row = {\n      id: doc.id,\n      key: doc.id,\n      value: {\n        rev: doc.rev\n      }\n    };\n\n    var deleted = doc.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        include_doc(row, doc);\n      }\n      if (--limit === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function onTxnComplete() {\n    Promise.all(processing).then(function () {\n      var returnVal = {\n        total_rows: metadata.doc_count,\n        offset: 0,\n        rows: results\n      };\n\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        returnVal.update_seq = metadata.seq;\n      }\n      callback(null, returnVal);\n    });\n  }\n\n  var cursor = descending ?\n    docStore.openCursor(keyRange, descending) :\n    docStore.openCursor(keyRange);\n\n  cursor.onsuccess = function (e) {\n\n    var doc = e.target.result && e.target.result.value;\n\n    // Happens if opts does not have limit,\n    // because cursor will end normally then,\n    // when all docs are retrieved.\n    // Would not be needed, if getAll() optimization was used like in #6059\n    if (!doc) { return; }\n\n    // Skip local docs\n    if (/^_local/.test(doc.id)) {\n      return e.target.result.continue();\n    }\n\n    var continueCursor = allDocsInner(doc);\n    if (continueCursor) {\n      e.target.result.continue();\n    }\n  };\n\n}\n\nfunction changes (txn, idbChanges, api, dbOpts, opts) {\n  if (txn.error) {\n    return opts.complete(txn.error);\n  }\n\n  if (opts.continuous) {\n    var id = dbOpts.name + ':' + uuid();\n    idbChanges.addListener(dbOpts.name, id, api, opts);\n    idbChanges.notify(dbOpts.name);\n    return {\n      cancel: function () {\n        idbChanges.removeListener(dbOpts.name, id);\n      }\n    };\n  }\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1;\n  }\n\n  var store = txn.txn.objectStore(DOC_STORE).index('seq');\n\n  var filter = filterChange(opts);\n  var received = 0;\n\n  var lastSeq = opts.since || 0;\n  var results = [];\n\n  var processing = [];\n\n  function onReqSuccess(e) {\n    if (!e.target.result) { return; }\n    var cursor = e.target.result;\n    var doc = cursor.value;\n    // Overwrite doc.data, which may have been rewritten (see rewrite.js) with\n    // the clean version for that rev\n    doc.data = doc.revs[doc.rev].data;\n    doc.data._id = doc.id;\n    doc.data._rev = doc.rev;\n    if (doc.deleted) {\n      doc.data._deleted = true;\n    }\n\n    if (opts.doc_ids && opts.doc_ids.indexOf(doc.id) === -1) {\n      return cursor.continue();\n    }\n\n    // WARNING: expecting possible old format\n    var change = opts.processChange(doc.data, doc, opts);\n    change.seq = doc.seq;\n    lastSeq = doc.seq;\n    var filtered = filter(change);\n\n    // If its an error\n    if (typeof filtered === 'object') {\n      return opts.complete(filtered);\n    }\n\n    if (filtered) {\n      received++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n\n      if (opts.include_docs && opts.attachments && doc.data._attachments) {\n        var promises = [];\n        for (var name in doc.data._attachments) {\n          var p = processAttachment(name, doc, change.doc, opts.binary);\n          // We add the processing promise to 2 arrays, one tracks all\n          // the promises needed before we fire onChange, the other\n          // ensure we process all attachments before onComplete\n          promises.push(p);\n          processing.push(p);\n        }\n\n        Promise.all(promises).then(function () {\n          opts.onChange(change);\n        });\n      } else {\n        opts.onChange(change);\n      }\n    }\n    if (received !== limit) {\n      cursor.continue();\n    }\n  }\n\n  function onTxnComplete() {\n    Promise.all(processing).then(function () {\n      opts.complete(null, {\n        results: results,\n        last_seq: lastSeq\n      });\n    });\n  }\n\n  var req;\n  if (opts.descending) {\n    req = store.openCursor(null, 'prev');\n  } else {\n    req = store.openCursor(IDBKeyRange.lowerBound(opts.since, true));\n  }\n\n  txn.txn.oncomplete = onTxnComplete;\n  req.onsuccess = onReqSuccess;\n}\n\nfunction getRevisionTree (txn, id, callback) {\n  if (txn.error) {\n    return callback(txn.error);\n  }\n\n  var req = txn.txn.objectStore(DOC_STORE).get(id);\n  req.onsuccess = function (e) {\n    if (!e.target.result) {\n      callback(createError(MISSING_DOC));\n    } else {\n      callback(null, e.target.result.rev_tree);\n    }\n  };\n}\n\nfunction doCompaction (txn, id, revs, callback) {\n  if (txn.error) {\n    return callback(txn.error);\n  }\n\n  var docStore = txn.txn.objectStore(DOC_STORE);\n\n  docStore.get(id).onsuccess = function (e) {\n    var doc = e.target.result;\n\n    traverseRevTree(doc.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (revs.indexOf(rev) !== -1) {\n        opts.status = 'missing';\n      }\n    });\n\n    var attachments = [];\n\n    revs.forEach(function (rev) {\n      if (rev in doc.revs) {\n        // Make a list of attachments that are used by the revisions being\n        // deleted\n        if (doc.revs[rev].data._attachments) {\n          for (var k in doc.revs[rev].data._attachments) {\n            attachments.push(doc.revs[rev].data._attachments[k].digest);\n          }\n        }\n        delete doc.revs[rev];\n      }\n    });\n\n    // Attachments have a list of revisions that are using them, when\n    // that list becomes empty we can delete the attachment.\n    attachments.forEach(function (digest) {\n      revs.forEach(function (rev) {\n        delete doc.attachments[digest].revs[rev];\n      });\n      if (!Object.keys(doc.attachments[digest].revs).length) {\n        delete doc.attachments[digest];\n      }\n    });\n\n    docStore.put(doc);\n  };\n\n  txn.txn.oncomplete = function () {\n    callback();\n  };\n}\n\nfunction destroy (dbOpts, openDatabases, idbChanges, callback) {\n\n  idbChanges.removeAllListeners(dbOpts.name);\n\n  function doDestroy() {\n    var req = indexedDB.deleteDatabase(dbOpts.name);\n    req.onsuccess = function () {\n      delete openDatabases[dbOpts.name];\n      callback(null, {ok: true});\n    };\n  }\n\n  // If the database is open we need to close it\n  if (dbOpts.name in openDatabases) {\n    openDatabases[dbOpts.name].then(function (res) {\n      res.idb.close();\n      doDestroy();\n    });\n  } else {\n    doDestroy();\n  }\n\n}\n\n// Adapted from\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/src/adapters/local/find/query-planner.js#L20-L24\n// This could change / improve in the future?\nvar COUCH_COLLATE_LO = null;\nvar COUCH_COLLATE_HI = '\\uffff'; // actually used as {\"\\uffff\": {}}\n\n// Adapted from: https://www.w3.org/TR/IndexedDB/#compare-two-keys\n// Importantly, *there is no upper bound possible* in idb. The ideal data\n// structure an infintely deep array:\n//   var IDB_COLLATE_HI = []; IDB_COLLATE_HI.push(IDB_COLLATE_HI)\n// But IDBKeyRange is not a fan of shenanigans, so I've just gone with 12 layers\n// because it looks nice and surely that's enough!\nvar IDB_COLLATE_LO = Number.NEGATIVE_INFINITY;\nvar IDB_COLLATE_HI = [[[[[[[[[[[[]]]]]]]]]]]];\n\n//\n// TODO: this should be made offical somewhere and used by AllDocs / get /\n// changes etc as well.\n//\nfunction externaliseRecord(idbDoc) {\n  var doc = idbDoc.revs[idbDoc.rev].data;\n  doc._id = idbDoc.id;\n  doc._rev = idbDoc.rev;\n  if (idbDoc.deleted) {\n    doc._deleted = true;\n  }\n\n  return doc;\n}\n\n/**\n * Generates a keyrange based on the opts passed to query\n *\n * The first key is always 0, as that's how we're filtering out deleted entries.\n */\nfunction generateKeyRange(opts) {\n  function defined(obj, k) {\n    return obj[k] !== void 0;\n  }\n\n  // Converts a valid CouchDB key into a valid IndexedDB one\n  function convert(key, exact) {\n    // The first item in every native index is doc.deleted, and we always want\n    // to only search documents that are not deleted.\n    // \"foo\" -> [0, \"foo\"]\n    var filterDeleted = [0].concat(key);\n\n    return filterDeleted.map(function (k) {\n      // null, true and false are not indexable by indexeddb. When we write\n      // these values we convert them to these constants, and so when we\n      // query for them we need to convert the query also.\n      if (k === null && exact) {\n        // for non-exact queries we treat null as a collate property\n        // see `if (!exact)` block below\n        return IDB_NULL;\n      } else if (k === true) {\n        return IDB_TRUE;\n      } else if (k === false) {\n        return IDB_FALSE;\n      }\n\n      if (!exact) {\n        // We get passed CouchDB's collate low and high values, so for non-exact\n        // ranged queries we're going to convert them to our IDB equivalents\n        if (k === COUCH_COLLATE_LO) {\n          return IDB_COLLATE_LO;\n        } else if (k.hasOwnProperty(COUCH_COLLATE_HI)) {\n          return IDB_COLLATE_HI;\n        }\n      }\n\n      return k;\n    });\n  }\n\n  // CouchDB and so PouchdB defaults to true. We need to make this explicit as\n  // we invert these later for IndexedDB.\n  if (!defined(opts, 'inclusive_end')) {\n    opts.inclusive_end = true;\n  }\n  if (!defined(opts, 'inclusive_start')) {\n    opts.inclusive_start = true;\n  }\n\n  if (opts.descending) {\n    // Flip before generating. We'll check descending again later when performing\n    // an index request\n    var realEndkey = opts.startkey,\n        realInclusiveEnd = opts.inclusive_start;\n\n    opts.startkey = opts.endkey;\n    opts.endkey = realEndkey;\n    opts.inclusive_start = opts.inclusive_end;\n    opts.inclusive_end = realInclusiveEnd;\n  }\n\n  try {\n    if (defined(opts, 'key')) {\n      return IDBKeyRange.only(convert(opts.key, true));\n    }\n\n    if (defined(opts, 'startkey') && !defined(opts, 'endkey')) {\n      return IDBKeyRange.lowerBound(convert(opts.startkey), !opts.inclusive_start);\n    }\n\n    if (!defined(opts, 'startkey') && defined(opts, 'endkey')) {\n      return IDBKeyRange.upperBound(convert(opts.endkey), !opts.inclusive_end);\n    }\n\n    if (defined(opts, 'startkey') && defined(opts, 'endkey')) {\n      return IDBKeyRange.bound(\n        convert(opts.startkey),    convert(opts.endkey),\n        !opts.inclusive_start, !opts.inclusive_end\n      );\n    }\n\n    return IDBKeyRange.only([0]);\n  } catch (err) {\n    console.error('Could not generate keyRange', err, opts);\n    throw Error('Could not generate key range with ' + JSON.stringify(opts));\n  }\n}\n\nfunction getIndexHandle(pdb, fields, reject) {\n  var indexName = naturalIndexName(fields);\n\n  return new Promise(function (resolve) {\n    pdb._openTransactionSafely([DOC_STORE], 'readonly', function (err, txn) {\n      if (err) {\n        return idbError(reject)(err);\n      }\n\n      txn.onabort = idbError(reject);\n      txn.ontimeout = idbError(reject);\n\n      var existingIndexNames = Array.from(txn.objectStore(DOC_STORE).indexNames);\n\n      if (existingIndexNames.indexOf(indexName) === -1) {\n        // The index is missing, force a db restart and try again\n        pdb._freshen()\n          .then(function () { return getIndexHandle(pdb, fields, reject); })\n          .then(resolve);\n      } else {\n        resolve(txn.objectStore(DOC_STORE).index(indexName));\n      }\n    });\n  });\n}\n\n// In theory we should return something like the doc example below, but find\n// only needs rows: [{doc: {...}}], so I think we can just not bother for now\n// {\n//   \"offset\" : 0,\n//   \"rows\": [{\n//     \"id\": \"doc3\",\n//     \"key\": \"Lisa Says\",\n//     \"value\": null,\n//     \"doc\": {\n//       \"_id\": \"doc3\",\n//       \"_rev\": \"1-z\",\n//       \"title\": \"Lisa Says\"\n//     }\n//   }],\n//   \"total_rows\" : 4\n// }\nfunction query(idb, signature, opts) {\n  // At this stage, in the current implementation, find has already gone through\n  // and determined if the index already exists from PouchDB's perspective (eg\n  // there is a design doc for it).\n  //\n  // If we find that the index doesn't exist this means we have to close and\n  // re-open the DB to correct indexes before proceeding, at which point the\n  // index should exist.\n\n  var pdb = this;\n\n  // Assumption, there will be only one /, between the design document name\n  // and the view name.\n  var parts = signature.split('/');\n\n  return new Promise(function (resolve, reject) {\n    pdb.get('_design/' + parts[0]).then(function (ddoc) {\n      var fields = rawIndexFields(ddoc, parts[1]);\n      if (!fields) {\n        throw new Error('ddoc ' + ddoc._id +' with view ' + parts[1] +\n          ' does not have map.options.def.fields defined.');\n      }\n\n      var skip = opts.skip;\n      var limit = Number.isInteger(opts.limit) && opts.limit;\n\n      return getIndexHandle(pdb, fields, reject)\n        .then(function (indexHandle) {\n          var keyRange = generateKeyRange(opts);\n          var req = indexHandle.openCursor(keyRange, opts.descending ? 'prev' : 'next');\n\n          var rows = [];\n          req.onerror = idbError(reject);\n          req.onsuccess = function (e) {\n            var cursor = e.target.result;\n\n            if (!cursor || limit === 0) {\n              return resolve({\n                rows: rows\n              });\n            }\n\n            if (skip) {\n              cursor.advance(skip);\n              skip = false;\n              return;\n            }\n\n            if (limit) {\n              limit = limit - 1;\n            }\n\n            rows.push({doc: externaliseRecord(cursor.value)});\n            cursor.continue();\n          };\n        });\n      })\n      .catch(reject);\n  });\n\n}\n\nfunction viewCleanup() {\n  // I'm not sure we have to do anything here.\n  //\n  // One option is to just close and re-open the DB, which performs the same\n  // action. The only reason you'd want to call this is if you deleted a bunch\n  // of indexes and wanted the space back immediately.\n  //\n  // Otherwise index cleanup happens when:\n  //  - A DB is opened\n  //  - A find query is performed against an index that doesn't exist but should\n\n  return Promise.resolve();\n}\n\nvar ADAPTER_NAME = 'indexeddb';\n\n// TODO: Constructor should be capitalised\nvar idbChanges = new changesHandler();\n\n// A shared list of database handles\nvar openDatabases = {};\n\nfunction IdbPouch(dbOpts, callback) {\n\n  var api = this;\n  var metadata = {};\n\n  // Wrapper that gives you an active DB handle. You probably want $t.\n  var $ = function (fun) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      setup(openDatabases, api, dbOpts).then(function (res) {\n        metadata = res.metadata;\n        args.unshift(res.idb);\n        fun.apply(api, args);\n      }).catch(function (err) {\n        var last = args.unshift();\n        if (typeof last === 'function') {\n          last(err);\n        } else {\n          console.error(err);\n        }\n      });\n    };\n  };\n  // the promise version of $\n  var $p = function (fun) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n\n      return new Promise(function (resolve, reject) {\n        setup(openDatabases, api, dbOpts).then(function (res) {\n          metadata = res.metadata;\n          args.unshift(res.idb);\n\n          return fun.apply(api, args);\n        }).then(resolve)\n          .catch(reject);\n      });\n    };\n  };\n  // Wrapper that gives you a safe transaction handle. It's important to use\n  // this instead of opening your own transaction from a db handle got from $,\n  // because in the time between getting the db handle and opening the\n  // transaction it may have been invalidated by index changes.\n  var $t = function (fun, stores, mode) {\n    stores = stores || [DOC_STORE];\n    mode = mode || 'readonly';\n\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      var txn = {};\n      setup(openDatabases, api, dbOpts).then(function (res) {\n        metadata = res.metadata;\n        txn.txn = res.idb.transaction(stores, mode);\n        args.unshift(txn);\n        fun.apply(api, args);\n      }).catch(function (err) {\n        console.error('Failed to establish transaction safely');\n        console.error(err);\n        txn.error = err;\n      });\n    };\n  };\n\n  api._openTransactionSafely = function (stores, mode, callback) {\n    $t(function (txn, callback) {\n      callback(txn.error, txn.txn);\n    }, stores, mode)(callback);\n  };\n\n  api._remote = false;\n  api.type = function () { return ADAPTER_NAME; };\n\n  api._id = $(function (_, cb) {\n    cb(null, metadata.db_uuid);\n  });\n\n  api._info = $(function (_, cb) {\n    return info(metadata, cb);\n  });\n\n  api._get = $t(get);\n\n  api._bulkDocs = $(function (_, req, opts, callback) {\n    bulkDocs(api, req, opts, metadata, dbOpts, idbChanges, callback);\n  });\n\n  api._allDocs = $t(function (txn, opts, cb) {\n    allDocs(txn, metadata, opts, cb);\n  });\n\n  api._getAttachment = $t(getAttachment);\n\n  api._changes = $t(function (txn, opts) {\n    changes(txn, idbChanges, api, dbOpts, opts);\n  });\n\n  api._getRevisionTree = $t(getRevisionTree);\n  api._doCompaction = $t(doCompaction, [DOC_STORE], 'readwrite');\n\n  api._customFindAbstractMapper = {\n    query: $p(query),\n    viewCleanup: $p(viewCleanup)\n  };\n\n  api._destroy = function (opts, callback) {\n    return destroy(dbOpts, openDatabases, idbChanges, callback);\n  };\n\n  api._close = $(function (db, cb) {\n    delete openDatabases[dbOpts.name];\n    db.close();\n    cb();\n  });\n\n  // Closing and re-opening the DB re-generates native indexes\n  api._freshen = function () {\n    return new Promise(function (resolve) {\n      api._close(function () {\n        $(resolve)();\n      });\n    });\n  };\n\n  // TODO: this setTimeout seems nasty, if its needed lets\n  // figure out / explain why\n  setTimeout(function () {\n    callback(null, api);\n  });\n}\n\n// TODO: this isnt really valid permanently, just being lazy to start\nIdbPouch.valid = function () {\n  return true;\n};\n\nfunction index (PouchDB) {\n  PouchDB.adapter(ADAPTER_NAME, IdbPouch, true);\n}\n\nexport default index;\n","import { assign, uuid, rev, invalidIdError, normalizeDdocFunctionName, parseDdocFunctionName } from 'pouchdb-utils';\nexport { invalidIdError, normalizeDdocFunctionName, parseDdocFunctionName } from 'pouchdb-utils';\nimport { atob, btoa, binaryStringToBlobOrBuffer, blobOrBufferToBinaryString, blobOrBufferToBase64 } from 'pouchdb-binary-utils';\nimport { binaryMd5 } from 'pouchdb-md5';\nimport { Map } from 'pouchdb-collections';\nimport { DOC_VALIDATION, INVALID_REV, createError, BAD_ARG, REV_CONFLICT, MISSING_DOC } from 'pouchdb-errors';\nimport { isDeleted, merge, winningRev, revExists, isLocalId } from 'pouchdb-merge';\nexport { isDeleted, isLocalId } from 'pouchdb-merge';\n\nfunction allDocsKeysQuery(api, opts) {\n  var keys = opts.keys;\n  var finalResults = {\n    offset: opts.skip\n  };\n  return Promise.all(keys.map(function (key) {\n    var subOpts = assign({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new Promise(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        /* istanbul ignore if */\n        if (opts.update_seq && res.update_seq !== undefined) {\n          finalResults.update_seq = res.update_seq;\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-/.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return atob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binaryStringToBlobOrBuffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = btoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobOrBufferToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobOrBufferToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new Map();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\nexport { allDocsKeysQuery, parseDoc, preprocessAttachments, processDocs, updateDoc };\n","// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\nexport { collectConflicts, collectLeaves, compactTree, isDeleted, isLocalId, merge, revExists, rootToLeaf, traverseRevTree, winningRev, latest };\n"],"names":[],"version":3,"file":"index.es.ca118c1c.js.map","sourceRoot":"/__parcel_source_root/"}